--상품테이블(TBL_PRODUCT)과 주문테이블(TBL_ORDER)의 구조와 데이터는 아래와 같다. 

CREATE SEQUENCE PRODUCT_SEQ;
CREATE TABLE TBL_PRODUCT(
    ID NUMBER,
    PRODUCT_NAME VARCHAR2(255) NOT NULL,
    PRODUCT_PRICE NUMBER DEFAULT 0,
    PRODUCT_STOCK NUMBER DEFAULT 0,
    CONSTRAINT PK_PRODUCT PRIMARY KEY(ID)
);

CREATE SEQUENCE ORDER_SEQ;
CREATE TABLE TBL_ORDER(
    ID NUMBER,
    PRODUCT_ID NUMBER,
    ORDER_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT PK_ORDER PRIMARY KEY(ID),
    CONSTRAINT FK_ORDER_PRODUCT FOREIGN KEY(PRODUCT_ID)
    REFERENCES TBL_PRODUCT(ID)
);

INSERT INTO TBL_PRODUCT
VALUES(PRODUCT_SEQ.NEXTVAL, '맥북', 1500000, 20);
INSERT INTO TBL_PRODUCT
VALUES(PRODUCT_SEQ.NEXTVAL, '모니터', 242000, 10);
INSERT INTO TBL_PRODUCT
VALUES(PRODUCT_SEQ.NEXTVAL, 'TV', 385000, 15);
INSERT INTO TBL_PRODUCT
VALUES(PRODUCT_SEQ.NEXTVAL, '공기청정기', 710033, 30);

INSERT INTO TBL_ORDER(ID, PRODUCT_ID)
VALUES(ORDER_SEQ.NEXTVAL, 3);
INSERT INTO TBL_ORDER(ID, PRODUCT_ID)
VALUES(ORDER_SEQ.NEXTVAL, 1);
INSERT INTO TBL_ORDER(ID, PRODUCT_ID)
VALUES(ORDER_SEQ.NEXTVAL, 4);
INSERT INTO TBL_ORDER(ID, PRODUCT_ID)
VALUES(ORDER_SEQ.NEXTVAL, 1);
INSERT INTO TBL_ORDER(ID, PRODUCT_ID)
VALUES(ORDER_SEQ.NEXTVAL, 1);
INSERT INTO TBL_ORDER(ID, PRODUCT_ID)
VALUES(ORDER_SEQ.NEXTVAL, 2);
INSERT INTO TBL_ORDER(ID, PRODUCT_ID)
VALUES(ORDER_SEQ.NEXTVAL, 2);
INSERT INTO TBL_ORDER(ID, PRODUCT_ID)
VALUES(ORDER_SEQ.NEXTVAL, 3);
INSERT INTO TBL_ORDER(ID, PRODUCT_ID)
VALUES(ORDER_SEQ.NEXTVAL, 3);
INSERT INTO TBL_ORDER(ID, PRODUCT_ID)
VALUES(ORDER_SEQ.NEXTVAL, 3);

SELECT * FROM TBL_ORDER;

SELECT * FROM TBL_PRODUCT;

 
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

--위 데이터를 추가 후 아래 결과를 얻는 SQL문을 작성하시오.
--(필요 시 서브쿼리, 조인, 집계함수 등을 사용하시오.)


--[요구사항조건]
--모든 결과 테이블은 알리아스(ALIAS)를 명확히 사용한다.
--평균값보다 이상, 이하의 조건으로 SQL문을 작성할 때에는
--FLOOR로 내림 값을 기준으로 한다.


-- 20분
-- 1번) 상품의 평균 재고 수
SELECT AVG(PRODUCT_STOCK) AS "평균 재고수"
FROM TBL_PRODUCT;

-- 2번) 맥북을 구매한 주문의 개수

SELECT COUNT(PRODUCT_NAME) AS "맥북을 구매한 개수"
FROM TBL_ORDER TBO
JOIN TBL_PRODUCT TBP
ON TBO.PRODUCT_ID = TBP.ID
WHERE PRODUCT_NAME = '맥북';

SELECT PRODUCT_NAME AS 상품명, COUNT(PRODUCT_NAME) AS "맥북을 구매한 수"
FROM (
	SELECT *
	FROM TBL_ORDER TBO
	JOIN TBL_PRODUCT TBP
	ON TBO.PRODUCT_ID = TBP.ID
	WHERE PRODUCT_NAME = '맥북'
)
GROUP BY PRODUCT_NAME;

-- 3번) 가장 많이 주문한 상품 1개 가져오기
-- 서브쿼리 방식
SELECT 
	PRODUCT_NAME AS 상품명, 
	PRODUCT_PRICE AS 가격, 
	PRODUCT_STOCK AS 재고
FROM TBL_PRODUCT
WHERE ID = (
	SELECT *
	FROM
	(
		SELECT PRODUCT_ID
		FROM (
			SELECT *
			FROM TBL_ORDER TBO
		)
		GROUP BY PRODUCT_ID
		ORDER BY COUNT(PRODUCT_ID) DESC
	)
	WHERE ROWNUM = 1
);

-- JOIN 방식
SELECT 
	PRODUCT_NAME AS 상품명, 
	PRODUCT_PRICE AS 가격, 
	PRODUCT_STOCK AS 재고
FROM (
	SELECT *
	FROM
		(
		SELECT PRODUCT_ID
		FROM TBL_ORDER
		GROUP BY PRODUCT_ID
		ORDER BY COUNT(PRODUCT_ID) DESC
		) 
	WHERE ROWNUM = 1
) TBO
JOIN TBL_PRODUCT TBP
ON TBO.PRODUCT_ID = TBP.ID;

-- 4번) 평균 주문개수 이상 주문된 상품 정보 중 이름 가격 재고만 가져오기 
SELECT 
	PRODUCT_NAME AS 상품명,
	PRODUCT_PRICE AS 가격,
	PRODUCT_STOCK AS 재고
FROM TBL_PRODUCT 
WHERE ID IN (
	SELECT PRODUCT_ID 
	FROM TBL_ORDER
	GROUP BY PRODUCT_ID
	HAVING COUNT(PRODUCT_ID) >= (
		SELECT FLOOR(AVG(COUNT(PRODUCT_ID)))
		FROM TBL_ORDER
		GROUP BY PRODUCT_ID
	)
);

-- 5번) 주문 정보에서 공기청정기 주문 정보 중 주문날짜만 가져오기
	SELECT TBO.ORDER_DATE AS "공기청정기 주문날짜"
	FROM TBL_ORDER TBO
	JOIN TBL_PRODUCT TBP
	ON TBO.PRODUCT_ID = TBP.ID AND TBP.PRODUCT_NAME = '공기청정기';

-- 6번) 판매중인 상품의 평균 가격을 소수점 2자리수까지 가져오기
	SELECT ROUND(AVG(PRODUCT_PRICE), 2) AS 평균가격
	FROM TBL_PRODUCT;


-- 12분
-- 평균 재고 이상 재고를 가진 상품 가져오기

SELECT * 
FROM TBL_PRODUCT
WHERE PRODUCT_STOCK >= (
	SELECT AVG(PRODUCT_STOCK)
	FROM TBL_PRODUCT
);

-- 7번) 상품의 재고가 제일 작은 상품 1개 이름과 재고 가져오기

SELECT 
	PRODUCT_NAME AS 상품명,
	PRODUCT_STOCK AS 재고
FROM (
	SELECT * 
	FROM TBL_PRODUCT
	ORDER BY PRODUCT_STOCK ASC
)
WHERE ROWNUM = 1;


-- 8번) TV 주문 정보 ORDER_ID만 가져오기
SELECT TBL_ORDER.ID AS 주문번호 아이디
FROM TBL_ORDER
JOIN TBL_PRODUCT
ON TBL_ORDER.PRODUCT_ID = TBL_PRODUCT.ID AND TBL_PRODUCT.PRODUCT_NAME = 'TV';

-- 9번) 상품의 가격중 제일 비싼 상품의 이름과 가격 가져오기
SELECT 
	PRODUCT_NAME AS 상품명,
	PRODUCT_PRICE AS "상품 가격"
FROM
(
	SELECT * 
	FROM TBL_PRODUCT
	ORDER BY PRODUCT_PRICE DESC
)
WHERE ROWNUM = 1;


-- 10번) 가장 적게 주문한 상품의 이름 가져오기
SELECT 
	PRODUCT_NAME AS "가장 적게 주문한 상품"
FROM 
	(
		SELECT *
		FROM (
			SELECT PRODUCT_ID, COUNT(PRODUCT_ID)
			FROM TBL_ORDER
			GROUP BY PRODUCT_ID
			ORDER BY COUNT(PRODUCT_ID)
		) 
		WHERE ROWNUM = 1
	) TBO
JOIN TBL_PRODUCT TBP
ON TBO.PRODUCT_ID = TBP.ID;

--다 푼 사람들
-- 11) 가격이 가장 비싼 상품의 주문 개수

SELECT COUNT(PRODUCT_ID) AS "주문한 개수"
FROM TBL_ORDER
WHERE PRODUCT_ID IN (
	SELECT ID
	FROM (
		SELECT * 
		FROM TBL_PRODUCT
		ORDER BY PRODUCT_PRICE DESC
	)
	WHERE ROWNUM = 1
);

-- 12) 재고가 가장 적은 상품의 주문 개수
SELECT COUNT(TBO.ID) AS "최소주문 상품개수"
FROM TBL_ORDER TBO
JOIN TBL_PRODUCT TBP
ON TBO.PRODUCT_ID = TBP.ID
WHERE TBP.ID IN (
	SELECT ID
	FROM TBL_PRODUCT
	WHERE PRODUCT_STOCK = (
		SELECT MIN(PRODUCT_STOCK) 
		FROM TBL_PRODUCT
	)
);

-- 13) 평균 가격보다 낮은 상품의 주문 개수
SELECT COUNT(ID) AS "주문개수"
FROM TBL_ORDER
WHERE PRODUCT_ID IN (	
	SELECT ID
	FROM TBL_PRODUCT
	WHERE PRODUCT_PRICE < (
		SELECT FLOOR(AVG(PRODUCT_PRICE))
		FROM TBL_PRODUCT
	)
);

-- 14) 평균 주문 숫자와 같은 ID를 가진 상품명
SELECT PRODUCT_NAME AS 상품명
FROM TBL_PRODUCT
WHERE ID IN (
	SELECT FLOOR(AVG(COUNT(PRODUCT_ID)))
	FROM TBL_ORDER
	GROUP BY PRODUCT_ID
);

-- 20분
-- 17) TV와 공기청정기 가격의 합
SELECT SUM(PRODUCT_PRICE)
FROM TBL_PRODUCT
WHERE PRODUCT_NAME IN ('TV', '공기청정기');

-- 15) 모니터보다 주문이 많은 상품명
SELECT TBP.PRODUCT_NAME
FROM (
	SELECT PRODUCT_ID
	FROM TBL_ORDER
	GROUP BY PRODUCT_ID
	HAVING COUNT(PRODUCT_ID) > (
		SELECT COUNT(TBP.ID)
		FROM TBL_ORDER TBO
		JOIN TBL_PRODUCT TBP
		ON TBO.PRODUCT_ID = TBP.ID
		WHERE TBP.PRODUCT_NAME = '모니터'
	)
) TBO
JOIN TBL_PRODUCT TBP
ON TBP.ID = TBO.PRODUCT_ID;

-- 18) 판매된 모든 상품의 총 매출(판매가격)
SELECT SUM(TBP.PRODUCT_PRICE) AS "총 매출"
FROM TBL_ORDER TBO
JOIN TBL_PRODUCT TBP
ON TBO.PRODUCT_ID = TBP.ID;

-- 16) TV보다 주문이 적은 상품명과 가격 
SELECT PRODUCT_NAME AS 상품명, PRODUCT_PRICE AS 가격 
FROM TBL_PRODUCT
WHERE ID IN (
	SELECT PRODUCT_ID
	FROM TBL_ORDER
	GROUP BY PRODUCT_ID
	HAVING COUNT(PRODUCT_ID) < (
		SELECT COUNT(TBP.PRODUCT_NAME) 
		FROM TBL_ORDER TBO
		JOIN TBL_PRODUCT TBP
		ON TBO.PRODUCT_ID = TBP.ID AND TBP.PRODUCT_NAME = 'TV'
	)
);

-- 19) TV의 현재 재고
--TV의 재고
SELECT PRODUCT_STOCK - (
	SELECT COUNT(PRODUCT_ID)
	FROM TBL_ORDER TBO
	JOIN TBL_PRODUCT TBP
	ON TBO.PRODUCT_ID = TBP.ID
	WHERE TBP.PRODUCT_NAME = 'TV'
	GROUP BY PRODUCT_ID
) AS 현재재고
FROM TBL_PRODUCT
WHERE PRODUCT_NAME = 'TV';

-- 20) 상품의 모든 재고에서 판매된 재고를 제외하여, 
-- 현재 판매할 수 있는 재고 가져오기
SELECT SUM(PRODUCT_STOCK) - SUM(COUNT(PRODUCT_STOCK)) AS "남은재고"
FROM TBL_ORDER TBO
JOIN TBL_PRODUCT TBP
ON TBO.PRODUCT_ID = TBP.ID
GROUP BY PRODUCT_STOCK;



