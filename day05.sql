CREATE TABLE TBL_USER(
	ID NUMBER,
	USER_ID VARCHAR2(255) UNIQUE NOT NULL,
	USER_PASSWORD VARCHAR2(255) NOT NULL,
	USER_ADDRESS VARCHAR2(255),
	USER_EMAIL VARCHAR2(255),
	USER_BIRTH DATE,
	CONSTRAINT PK_USER PRIMARY KEY(ID)
);

CREATE SEQUENCE USER_SEQ;

CREATE TABLE TBL_POST(
	ID NUMBER,
	USER_ID NUMBER,
	POST_TITLE VARCHAR2(255) NOT NULL,
	POST_CONTENT VARCHAR2(255) NOT NULL,
	POST_CREATE_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
	CONSTRAINT PK_POST PRIMARY KEY(ID),
	CONSTRAINT FK_POST_USER FOREIGN KEY(USER_ID)
	REFERENCES TBL_USER(ID)
);

CREATE SEQUENCE POST_SEQ;

CREATE TABLE TBL_REPLY(
	ID NUMBER,
	USER_ID NUMBER,
	POST_ID NUMBER,
	REPLY_CONTENT VARCHAR2(255) NOT NULL,
	CONSTRAINT PK_REPLY PRIMARY KEY(ID),
	CONSTRAINT FK_REPLY_USER FOREIGN KEY(USER_ID)
	REFERENCES TBL_USER(ID),
	CONSTRAINT FK_REPLY_POST FOREIGN KEY(POST_ID)
	REFERENCES TBL_POST(ID)
);

CREATE SEQUENCE REPLY_SEQ;


INSERT INTO TBL_USER
VALUES(USER_SEQ.NEXTVAL, 'tpghks123', '1234', '경기도 구리시', 'tpghks123@gamil.com', '2000-05-15');
INSERT INTO TBL_USER
VALUES(USER_SEQ.NEXTVAL, 'hgd1234', '4567', '서울시 강남구', 'gd1234@gamil.com', '1999-01-01');
INSERT INTO TBL_USER
VALUES(USER_SEQ.NEXTVAL, 'lss4567', '0000', '경기도 용인시', 'zzanglss@gamil.com', '2000-07-16');
INSERT INTO TBL_USER
VALUES(USER_SEQ.NEXTVAL, 'cdy1234', '9999', '서울시 종로구', 'mafia1234@gamil.com', '2007-10-16');

SELECT * FROM TBL_USER;

INSERT INTO TBL_POST(ID, USER_ID, POST_TITLE,POST_CONTENT)
VALUES(POST_SEQ.NEXTVAL, 1, '오운완', '오늘 운동 완료했지롱~!');
INSERT INTO TBL_POST(ID, USER_ID, POST_TITLE,POST_CONTENT)
VALUES(POST_SEQ.NEXTVAL, 1, '오늘 저녁은 떡볶이', '엽떡 존맛탱구리 JMT');
INSERT INTO TBL_POST(ID, USER_ID, POST_TITLE,POST_CONTENT)
VALUES(POST_SEQ.NEXTVAL, 2, '마라탕 탕탕후루후루', '후루후루후루~');
INSERT INTO TBL_POST(ID, USER_ID, POST_TITLE,POST_CONTENT)
VALUES(POST_SEQ.NEXTVAL, 4, '데이트가기 좋은 날', '꽃길만 걷기');

SELECT * FROM TBL_POST;

INSERT INTO TBL_REPLY
VALUES(REPLY_SEQ.NEXTVAL, 1, 4, '멋지다! 오운완!');
INSERT INTO TBL_REPLY
VALUES(REPLY_SEQ.NEXTVAL, 3, 1, '저랑 같이 헬스 다니실래요?');
INSERT INTO TBL_REPLY
VALUES(REPLY_SEQ.NEXTVAL, 3, 2, '떡볶이 좋아하세요?');
INSERT INTO TBL_REPLY
VALUES(REPLY_SEQ.NEXTVAL, 2, 3, '선배 마라탕 사주세요~');

SELECT * FROM TBL_REPLY;

SELECT TP.POST_TITLE, TP.POST_CONTENT, TU.USER_ID
FROM TBL_POST TP
INNER JOIN TBL_USER TU
ON TP.USER_ID = TU.ID
WHERE TU.ID = 1;


-- 3번 유저가 댓글(REPLY)을 단 게시글(POST)를 가져오기

SELECT TP.*
FROM TBL_REPLY TR
INNER JOIN TBL_USER TU
ON TR.USER_ID = TU.ID
INNER JOIN TBL_POST TP 
ON TR.POST_ID = TP.ID
WHERE TR.USER_ID = 3;

-- 게시판에 글을 작성한 사람의 아이디, 이메일을 조회
-- 단 조인 사용 

SELECT TU.USER_ID AS 아이디, TU.USER_EMAIL AS 이메일 
FROM TBL_POST TP
JOIN TBL_USER TU
ON TP.USER_ID = TU.ID;


-- 12분
-- 댓글을 작성한 사람 중 게시글을 등록한 회원의 전체 정보를 조회
SELECT DISTINCT TU.*
FROM TBL_USER TU
JOIN TBL_POST TP
ON TP.USER_ID = TU.ID
JOIN TBL_REPLY TR 
ON TR.USER_ID = TP.USER_ID;


SELECT * FROM TBL_USER;

-- 서울시의 거주하는 사람이 게시판(POST)에 쓴 글에
-- 달린 댓글내용(REPLY_CONTENT)만 출력
SELECT TR.REPLY_CONTENT AS 댓글
FROM TBL_REPLY TR
JOIN TBL_POST TP
ON TR.POST_ID = TP.ID
JOIN TBL_USER TU
ON TR.USER_ID = TU.ID
WHERE TU.USER_ADDRESS LIKE '서울%';

-- 회원가입한 유저의 수와 ID가 같은 유저가 작성한 게시글의 제목 가져오기

SELECT AVG(USER_PASSWORD) FROM TBL_USER;

-- 비밀번호의 평균 값보다 작은 비밀번호를 가진 사람이
-- 작성한 게시글의 타이틀을 가져오기

-- 떡볶이를 포함하고 있는 게시판 글에 달린 댓글 가져오기
-- 3번 유저가 작성한 댓글 가져오기
-- 2번 유저가 작성한 게시판 제목, 내용 가져오기
-- 1번 유저가 작성한 댓글과 게시판 내용 모두 가져오기











